/*css reset*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
	display: block;
}
body {
	line-height: 1;
}
ol,
ul {
	list-style: none;
}
blockquote,
q {
	quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
/*css reset*/
/*global*/
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap');
:root {
	--system-ui: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
		'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
	--transparent-black: hsla(0, 0%, 0%, 0.452);
	--white: hsl(0, 0%, 90%);
	--black: hsl(0, 0%, 10%);
	--gray: hsl(0, 0%, 16%);
	--dark-gray: hsl(0, 0%, 9%);
}
:root * {
	box-sizing: border-box;
	font-family: var(--system-ui);
}
body {
	display: grid;
	min-height: 100vh;
	grid-template-columns: minmax(300px, 1fr) minmax(300px, 1fr);
	overflow: hidden; /* Prevent body scroll */
}
@media only screen and (max-width: 900px) {
	body {
		grid-template-columns: 1fr;
		overflow-y: auto;
	}
}
@media only screen and (max-width: 600px) {
	body {
		font-size: 14px;
	}
}
button {
	transition: filter 60ms linear;
	cursor: pointer;
}
button:hover {
	filter: brightness(0.9);
}
button:active {
	filter: brightness(0.95);
}
img {
	background-color: var(--transparent-black);
	border-radius: 50px;
	padding: 10px;
	margin: 6px;
	max-width: 80px;
}
/*global*/
/*current weather*/
#current {
	display: flex;
	flex-direction: column;
	gap: 50px;
	padding: 100px;
	color: var(--white);
	height: 100%;
	width: 100%;
	align-items: center;
	position: sticky;
	top: 0;
	height: 100vh;
	overflow: hidden;
	box-sizing: border-box;
}
#current > img {
	background: none;
	border-radius: 0;
	padding: 0;
	margin: 0;
	max-width: 300px;
}
#current h2 {
	font-size: 2rem;
	font-weight: bold;
}
#parametersContainer {
	display: flex;
	width: 100%;
	gap: 10px;
}
#parametersContainer > * {
	flex: 1;
}
#parametersContainer button {
	background-color: var(--transparent-black);
	color: var(--white);
	border: none;
	border-radius: 0.5rem;
	padding: 0.5rem;
	height: 40px;
	width: 100%;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	justify-content: center;
	align-items: center;
	transition: all 0.2s ease-out;
	transform: translateZ(0);
}

#parametersContainer button:hover:not(:disabled) {
	background-color: var(--black);
}

#parametersContainer button:disabled {
	cursor: not-allowed;
	opacity: 0.7;
}

#parametersContainer button i {
	transition: transform 0.2s ease-out;
	backface-visibility: hidden;
}

#parametersContainer button:hover:not(:disabled) i {
	transform: scale(1.2);
}

#parametersContainer button:active:not(:disabled) i {
	transform: scale(0.95);
}

#parametersContainer button:disabled i {
	animation: pulse 1s ease-out infinite;
}

@keyframes pulse {
	0% {
		transform: scale(1) translateZ(0);
	}
	50% {
		transform: scale(1.2) translateZ(0);
	}
	100% {
		transform: scale(1) translateZ(0);
	}
}

/* Remove redundant individual button styles */
#current button {
	position: relative;
	top: auto;
	right: auto;
	width: auto;
}

#getCurrentLocation:disabled {
	cursor: wait !important;
}
#searchBarContainer {
	height: fit-content;
	width: fit-content;
	position: relative;
}
#searchBarContainer input {
	border: none;
	width: 100%;
	height: 40px;
	border-radius: 0.5rem;
	padding: 0.5rem;
}
#currentWeather {
	background-color: var(--transparent-black);
	padding: 30px;
	display: flex;
	flex-direction: column;
	gap: 15px;
	align-items: center;
	border-radius: 1rem;
	width: 100%;
	text-align: center;
	backdrop-filter: blur(8px);
}
#currentWeather h2 {
	font-size: 2.5rem;
	font-weight: bold;
	margin-bottom: 5px;
}
#currentWeather p {
	font-size: 1.2rem;
	margin: 5px 0;
}
#currentWeather p:nth-child(3) {
	font-size: 2rem;
	font-weight: bold;
	font-family: 'Poppins', var(--system-ui);
}
#completionsContainer {
	display: flex;
	flex-direction: column;
	position: absolute;
	top: 100%;
	left: 0;
	right: 0;
	background-color: var(--white);
	border-radius: 0.5rem;
	z-index: 100;
	color: var(--black);
	width: 100%;
	margin-top: 5px;
	max-height: 200px;
	overflow-y: auto;
}

#completionsContainer div:hover {
	color: var(--white);
	background-color: var(--black);
	cursor: pointer;
}

#completionsContainer div {
	border-radius: 0.5rem;
	padding: 0.5rem;
}
#current.day {
	background-image: url('../public/img/day.png');
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}
#current.night {
	background-image: url('../public/img/night.png');
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}
@media only screen and (max-width: 900px) {
    #current {
        padding: 40px 20px;
        height: auto;
        min-height: 100vh;
        position: relative;
    }

    #current > img {
        max-width: 200px;
    }

    #parametersContainer {
        flex-direction: column;
        gap: 15px;
    }

    #current button {
        width: 100%;
    }

    #searchBarContainer {
        width: 100%;
    }

    #searchBarContainer input {
        width: 100%;
    }
}

@media only screen and (max-width: 600px) {
    #current {
        padding: 20px 10px;
        gap: 30px;
    }

    #current > img {
        max-width: 150px;
    }

    #currentWeather h2 {
        font-size: 2rem;
    }

    #currentWeather p:nth-child(3) {
        font-size: 1.6rem;
    }
}
/*current weather*/

/*forecast*/
#forecast {
	background-color: var(--gray);
	padding-bottom: 50px;
	height: 100vh;
	overflow-y: auto;
	overflow-x: hidden;
}

#forecast h3 {
	color: var(--white);
	font-size: 1.6rem;
	font-weight: bold;
	padding: 20px;
	margin: 0;
	text-transform: uppercase;
	letter-spacing: 1.5px;
	background-color: var(--dark-gray);
	text-align: center;
}

#forecast > div {
	display: flex;
	align-items: center;
	padding: 25px;
	gap: 20px;
	overflow-x: auto;
	overflow-y: hidden;
	color: var(--white);
	background-color: var(--gray);
	scroll-behavior: smooth;
}

#forecast h2 {
	font-size: 1.3rem;
	font-weight: bold;
	margin-bottom: 5px;
}

#forecast > div > div {
	background-color: var(--transparent-black);
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	min-width: 140px;
	min-height: 120px;
	text-align: center;
	gap: 10px;
	border-radius: 1rem;
	padding: 15px;
	margin: auto;
	transition:
		transform 0.2s ease,
		background-color 0.2s ease;
	cursor: pointer;
}

#forecast > div > div:hover {
	transform: translateY(-5px);
	background-color: hsla(0, 0%, 0%, 0.7);
}

#todayWeatherDetails {
	justify-content: space-evenly !important;
	flex-wrap: wrap;
}

#todayWeatherDetails > div {
	flex: 1;
	min-width: 200px !important;
}

#futureForecast div > div {
	background: transparent !important;
	min-width: auto !important;
	min-height: auto !important;
	padding: 0 !important;
}
@media only screen and (max-width: 900px) {
    #forecast {
        height: auto;
        min-height: 100vh;
    }

    #forecast h3 {
        font-size: 1.4rem;
        padding: 15px;
    }

    #forecast > div {
        padding: 25px;
        gap: 15px;
    }

    #todayWeatherDetails > div {
        min-width: 150px !important;
    }
}

@media only screen and (max-width: 600px) {
    #forecast h3 {
        font-size: 1.2rem;
        padding: 12px;
    }

    #forecast > div {
        padding: 20px;
        gap: 10px;
    }

    #forecast > div > div {
        min-width: 120px;
        min-height: 100px;
        padding: 10px;
    }

    #todayWeatherDetails > div {
        min-width: 130px !important;
    }
}
/*forecast*/

/*scrollbar*/
::-webkit-scrollbar {
	height: 10px;
}
::-webkit-scrollbar-thumb {
	background-color: var(--black);
	border-radius: 10px;
}
/*scrollbar*/

/*footer*/
footer {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 50px;
    background-color: var(--black);
    color: var(--white);
    text-align: center;
    padding: 0 20px;
    z-index: 100;
    backdrop-filter: blur(8px);
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
}

footer p {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
}

.fa-github {
	margin-left: 10px;
    font-size: 1.2rem;
    color: var(--white);
    transition: transform 0.3s ease;
}

footer a {
    color: var(--white);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
}

footer a:hover .fa-github {
    transform: rotate(360deg) scale(1.1);
}

footer a:focus {
    outline: 2px solid var(--white);
    outline-offset: 2px;
    border-radius: 4px;
}

@media only screen and (max-width: 600px) {
    footer {
        height: 40px;
    }
    
    footer p {
        font-size: 0.8rem;
    }
    
    .fa-github {
        font-size: 1rem;
    }
}
/*footer*/

#getCurrentLocation {
	justify-content: center;
	align-items: center;
	transition: all 0.2s ease-out;
	transform: translateZ(0); /* Hardware acceleration */
	will-change: transform, opacity; /* Optimize animations */
}

#getCurrentLocation:disabled {
	cursor: wait;
	opacity: 0.7;
}

#getCurrentLocation i {
	transition: transform 0.2s ease-out;
	backface-visibility: hidden; /* Prevent flicker */
}

#getCurrentLocation:not(:disabled) i {
	animation: none;
}

#getCurrentLocation:disabled i {
	animation: pulse 1s ease-out infinite;
}

@keyframes pulse {
	0% {
		transform: scale(1) translateZ(0);
	}
	50% {
		transform: scale(1.2) translateZ(0);
	}
	100% {
		transform: scale(1) translateZ(0);
	}
}

/* Optimize mobile performance */
@media (max-width: 768px) {
    #getCurrentLocation {
        transform: none;
        transition: opacity 0.2s ease-out;
    }
    
    #getCurrentLocation i {
        transition: none;
    }
    
    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
    }
}
